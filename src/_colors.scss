// Helper functions
@function tint($color, $percentage) {
  @return mix(white, $color, $percentage);
}

@function shade($color, $percentage) {
  @return mix(black, $color, $percentage);
}

// Base colors
$base-colors: (
        "blue": #0A78BF,
        "blue-green": #1596B4,
        "green": #33AB6F,
        "yellow-green": #8EA604,
        "yellow": #F0B91E,
        "orange": #F0871E,
        "red": #DF2F26,
        "red-violet": #A5417D,
        "violet": #5B3E97,
        "blue-violet": #322864,
);

$all-colors: ();

// Generate shades and tints
@each $name, $color in $base-colors {
  $current: (
          "#{$name}": $color,
          "#{$name}-shade-40": shade($color, 40%),
          "#{$name}-shade-20": shade($color, 20%),
          "#{$name}-tint-20": tint($color, 20%),
          "#{$name}-tint-90": tint($color, 90%),
  );

  $all-colors: map-merge($all-colors, $current);
}

// Add black and white
$all-colors: map-merge($all-colors, (
        "black": #010101,
        "white": #FFFFFF,
));

// Generate grays
@each $tint in (10, 20, 40, 70, 90, 95, 97) {
  $all-colors: map-merge($all-colors, (
          "black-tint-#{$tint}": tint(map-get($all-colors, "black"), $tint),
  ));
}

// Add aliases for rubric / assessment score colors
$all-colors: map-merge($all-colors, (
        "score-0": map-get($all-colors, "black-tint-40"),
        "score-1": map-get($all-colors, "red"),
        "score-2": map-get($all-colors, "orange"),
        "score-3": map-get($all-colors, "green"),
        "score-4": map-get($all-colors, "blue"),
        "score-5": map-get($all-colors, "violet"),
        "score-light-0": map-get($all-colors, "black-tint-90"),
        "score-light-1": map-get($all-colors, "red-tint-90"),
        "score-light-2": map-get($all-colors, "orange-tint-90"),
        "score-light-3": map-get($all-colors, "green-tint-90"),
        "score-light-4": map-get($all-colors, "blue-tint-90"),
        "score-light-5": map-get($all-colors, "violet-tint-90"),
));

// Copy all Sass variables to CSS variables
:root {
  // Base colors + shades + tints
  @each $name, $color in $all-colors {
    --#{$name}: #{$color};
  }
}

// Background colors
@each $name, $color in $all-colors {
  .bg-#{$name} {
    background-color: $color;
  }
}

// Text colors
.text-black {
  color: var(--black);
}

.text-black-tint-10 {
  color: var(--black-tint-10);
}

.text-black-tint-20 {
  color: var(--black-tint-20);
}

.text-black-tint-40 {
  color: var(--black-tint-40);
}

.text-black-tint-70 {
  color: var(--black-tint-70);
}

.text-black-tint-90 {
  color: var(--black-tint-90);
}

.text-black-tint-95 {
  color: var(--black-tint-95);
}

.text-black-tint-97 {
  color: var(--black-tint-97);
}

.text-white {
  color: var(--white);
}

@each $name, $color in $base-colors {
  .text-#{$name} {
    color: $color;
  }
}

.text-score-0 {
  color: var(--score-0) !important;
}

.text-score-1 {
  color: var(--score-1) !important;
}

.text-score-2 {
  color: var(--score-2) !important;
}

.text-score-3 {
  color: var(--score-3) !important;
}

.text-score-4 {
  color: var(--score-4) !important;
}

.text-score-5 {
  color: var(--score-5) !important;
}
